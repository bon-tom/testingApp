<?xml version="1.0" encoding="utf-8"?>
<?data-format version="0.400"?>
<Form>
  <Name value="movieDetail" />
  <Caption value="Movie detail" />
  <Content>
    <Panel>
      <Name value="panel1" />
      <Orientation value="Vertical" />
      <Panel.Height value="#" />
      <Panel.Width value="*" />
      <Children>
        <Button>
          <Name value="goBacktoRecordList" />
          <Caption value="Go back to Record list" />
          <Panel.Height value="#" />
          <Panel.Width value="150px" />
          <OnClick>
            <ActionEvent ReferencedAction="~goToMovies1" />
          </OnClick>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-button" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Button>
        <Button>
          <Name value="editRecord" />
          <Caption value="Edit record" />
          <Panel.Height value="#" />
          <Panel.Width value="150px" />
          <OnClick>
            <ActionEvent ReferencedAction="~goToeditRecord" />
          </OnClick>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-button" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Button>
        <Button>
          <Name value="deleteOneRecord" />
          <Caption value="Delete one record" />
          <Panel.Height value="#" />
          <Panel.Width value="150px" />
          <OnClick>
            <ActionEvent ReferencedAction="~deleteRecord" />
          </OnClick>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-button" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Button>
        <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
          <Name value="labeledText1" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Bindings>
            <Binding SourceProperty="Data" Expression="complex1.name" />
            <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.name.isRequired()" />
            <Binding SourceProperty="Caption" Expression="complex1.name.caption()" />
          </Bindings>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-labeledtext" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </LabeledText>
        <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
          <Name value="labeledText2" />
          <Panel.Height value="#" />
          <Panel.Width value="300px" />
          <Bindings>
            <Binding SourceProperty="Data" Expression="complex1.yearOfRelease" />
            <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.yearOfRelease.isRequired()" />
            <Binding SourceProperty="Caption" Expression="complex1.yearOfRelease.caption()" />
          </Bindings>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-labeledtext" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </LabeledText>
        <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
          <Name value="labeledText3" />
          <Panel.Height value="#" />
          <Panel.Width value="300px" />
          <Bindings>
            <Binding SourceProperty="Data" Expression="complex1.type" />
            <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.type.isRequired()" />
            <Binding SourceProperty="Caption" Expression="complex1.type.caption()" />
          </Bindings>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-labeledtext" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </LabeledText>
        <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
          <Name value="labeledText4" />
          <Panel.Height value="#" />
          <Panel.Width value="300px" />
          <Bindings>
            <Binding SourceProperty="Data" Expression="complex1.mainDirector" />
            <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.mainDirector.isRequired()" />
            <Binding SourceProperty="Caption" Expression="complex1.mainDirector.caption()" />
          </Bindings>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-labeledtext" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </LabeledText>
        <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
          <Name value="labeledText5" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Bindings>
            <Binding SourceProperty="Data" Expression="complex1.description" />
            <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.description.isRequired()" />
            <Binding SourceProperty="Caption" Expression="complex1.description.caption()" />
          </Bindings>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-labeledtext" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </LabeledText>
        <GroupBox>
          <Name value="groupBox2" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Content>
            <Repeater>
              <Name value="repeater2" />
              <Content>
                <Panel>
                  <Name value="panel4" />
                  <Orientation value="Vertical" />
                  <Children>
                    <TextBox>
                      <Name value="textBox2" />
                      <CaptionVAlign value="Middle" />
                      <IsEnabled value="False" />
                      <Panel.Height value="#" />
                      <Panel.Width value="300px" />
                      <Bindings>
                        <Binding SourceProperty="Data" Expression="genre" />
                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="genre.isRequired()" />
                        <Binding SourceProperty="Caption" Expression="genre.caption()" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-textbox" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </TextBox>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
              </Content>
              <Bindings>
                <Binding SourceProperty="DataItems" Expression="complex1.genres" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-repeater" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Repeater>
          </Content>
          <Bindings>
            <Binding SourceProperty="Caption" Expression="complex1.genres.caption()" />
          </Bindings>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-groupbox" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </GroupBox>
        <GroupBox>
          <Name value="groupBox1" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Content>
            <Repeater>
              <Name value="repeater1" />
              <Content>
                <Panel>
                  <Name value="panel3" />
                  <Orientation value="Vertical" />
                  <Children>
                    <TextBox>
                      <Name value="textBox1" />
                      <CaptionVAlign value="Middle" />
                      <IsEnabled value="False" />
                      <Panel.Height value="#" />
                      <Panel.Width value="300px" />
                      <Bindings>
                        <Binding SourceProperty="Data" Expression="actorName" />
                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="actorName.isRequired()" />
                        <Binding SourceProperty="Caption" Expression="actorName.caption()" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-textbox" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </TextBox>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
              </Content>
              <Bindings>
                <Binding SourceProperty="DataItems" Expression="complex1.starring" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-repeater" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Repeater>
          </Content>
          <Bindings>
            <Binding SourceProperty="Caption" Expression="complex1.starring.caption()" />
          </Bindings>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-groupbox" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </GroupBox>
        <GroupBox>
          <Name value="groupBox3" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Content>
            <Repeater>
              <Name value="repeater3" />
              <Content>
                <Panel>
                  <Name value="panel5" />
                  <Orientation value="Vertical" />
                  <Children>
                    <TextBox>
                      <Name value="textBox3" />
                      <Panel.Height value="#" />
                      <Panel.Width value="*" />
                      <Bindings>
                        <Binding SourceProperty="Data" Expression="number" />
                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="number.isRequired()" />
                        <Binding SourceProperty="Caption" Expression="number.caption()" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-textbox" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </TextBox>
                    <GroupBox>
                      <Name value="groupBox4" />
                      <Panel.Height value="#" />
                      <Panel.Width value="*" />
                      <Content>
                        <Repeater>
                          <Name value="repeater4" />
                          <Content>
                            <Panel>
                              <Name value="panel6" />
                              <Orientation value="Vertical" />
                              <Children>
                                <TextBox>
                                  <Name value="textBox4" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Bindings>
                                    <Binding SourceProperty="Data" Expression="episodeName" />
                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="episodeName.isRequired()" />
                                    <Binding SourceProperty="Caption" Expression="episodeName.caption()" />
                                  </Bindings>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-textbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </TextBox>
                                <Panel>
                                  <Name value="panel7" />
                                  <Orientation value="Vertical" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Children>
                                    <DatePicker>
                                      <Name value="datePicker2" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="*" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="rating.dateOfWatching" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="rating.dateOfWatching.isRequired()" />
                                        <Binding SourceProperty="Caption" Expression="rating.dateOfWatching.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-datepicker" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </DatePicker>
                                    <CheckBox>
                                      <Name value="checkBox2" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="*" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="rating.seenItWhole" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="rating.seenItWhole.isRequired()" />
                                        <Binding SourceProperty="Caption" Expression="rating.seenItWhole.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-checkbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </CheckBox>
                                    <TextBox>
                                      <Name value="textBox5" />
                                      <Panel.Height value="#" />
                                      <Panel.Width value="*" />
                                      <Bindings>
                                        <Binding SourceProperty="Data" Expression="rating.score" />
                                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="rating.score.isRequired()" />
                                        <Binding SourceProperty="Caption" Expression="rating.score.caption()" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-textbox" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </TextBox>
                                  </Children>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-panel" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Panel>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Content>
                          <Bindings>
                            <Binding SourceProperty="DataItems" Expression="Episodes" />
                          </Bindings>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-repeater" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Repeater>
                      </Content>
                      <Bindings>
                        <Binding SourceProperty="Caption" Expression="Episodes.caption()" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-groupbox" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </GroupBox>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
              </Content>
              <Bindings>
                <Binding SourceProperty="DataItems" Expression="complex1.seasons" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-repeater" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Repeater>
          </Content>
          <Bindings>
            <Binding SourceProperty="Caption" Expression="complex1.seasons.caption()" />
          </Bindings>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-groupbox" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </GroupBox>
        <Panel>
          <Name value="panel2" />
          <Orientation value="Vertical" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <DatePicker>
              <Name value="datePicker1" />
              <IsEnabled value="False" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.rating.dateOfWatching" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.rating.dateOfWatching.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.rating.dateOfWatching.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-datepicker" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </DatePicker>
            <CheckBox>
              <Name value="checkBox1" />
              <IsEnabled value="False" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.rating.seenItWhole" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.rating.seenItWhole.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.rating.seenItWhole.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-checkbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </CheckBox>
            <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
              <Name value="labeledText7" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.rating.score" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.rating.score.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.rating.score.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-labeledtext" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </LabeledText>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
      </Children>
      <CssClass>
        <CssClassConditional>
          <ClassName value="{theme}-panel" />
          <IsThemedStyle value="True" />
        </CssClassConditional>
      </CssClass>
    </Panel>
  </Content>
  <DataContext>
    <DataContext>
      <Children>
        <Attribute>
          <Name value="recordForEdit" />
          <Caption value="Record for edit" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="dataforMovieDetail" />
          <Caption value="Datafor movie detail" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="id" />
          <Caption value="Id" />
          <DataContextParameter.IsInput value="True" />
          <DataContextParameter.IsInputRequired value="True" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="url" />
          <Caption value="Url" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="deleteConfirm" />
          <Caption value="Delete confirm" />
          <DeclaredType>
            <AttributeType>
              <BaseType value="Bool" />
            </AttributeType>
          </DeclaredType>
        </Attribute>
        <Complex>
          <Name value="complex1" />
          <Caption value="Complex 1" />
          <Children>
            <Include>
              <Include reference="+DataEntities.Movies" />
            </Include>
            <Collection>
              <Name value="genres" />
              <Caption value="Genres" />
              <Children>
                <Attribute>
                  <Name value="genre" />
                  <Caption value="Genre" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
              </Children>
            </Collection>
            <Collection>
              <Name value="starring" />
              <Caption value="Starring" />
              <Children>
                <Include>
                  <Include reference="+DataEntities.starring" />
                </Include>
              </Children>
            </Collection>
            <Complex>
              <Name value="rating" />
              <Caption value="Rating" />
              <Children>
                <Attribute>
                  <Name value="dateOfWatching" />
                  <Caption value="Date of watching" />
                  <DeclaredType>
                    <AttributeType>
                      <BaseType value="Date" />
                    </AttributeType>
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="seenItWhole" />
                  <Caption value="Seen it whole" />
                  <DeclaredType>
                    <AttributeType>
                      <BaseType value="Bool" />
                    </AttributeType>
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="score" />
                  <Caption value="Score" />
                  <DeclaredType>
                    <AttributeType>
                      <BaseType value="Integer" />
                      <IntMax value="10" />
                      <IntMin value="0" />
                    </AttributeType>
                  </DeclaredType>
                </Attribute>
              </Children>
            </Complex>
            <Collection>
              <Name value="seasons" />
              <Caption value="Seasons" />
              <Children>
                <Include>
                  <Include reference="+DataEntities.Seasons" />
                </Include>
              </Children>
            </Collection>
          </Children>
        </Complex>
        <Complex>
          <Name value="deleteComplex" />
          <Caption value="Delete complex" />
          <Children>
            <Attribute>
              <Name value="id" />
              <Caption value="Id" />
              <DeclaredType>
                <AttributeType />
              </DeclaredType>
            </Attribute>
          </Children>
        </Complex>
      </Children>
    </DataContext>
  </DataContext>
  <OnCreate>
    <ActionEvent ReferencedAction="~loadSingleRecord" />
  </OnCreate>
  <Actions>
    <ActionBlock>
      <Name value="initmovieDetail" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[system.console(form.dataforMovieDetail)
system.console(tostring(form.dataforMovieDetail.isTouched()) )

form.actions.setUrl()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="goToMovies1" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[navigation.main.movies1.go("")]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="loadSingleRecord" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[/*
var response = apiobjects.serverForMovies.getAsync("record?id=" +tostring(this.form.id))

if response.isError() then
	system.consoleError(response.getErrorMessage())	
else
//	result = response.extractJson("card")
//	result = response.extractJson("record/")
	
	system.console(response.getJsonString())
	
	var codeListData = response.getJsonString()
	
	system.console(codeListData)
	
	//form.apiobjects.fillFromJson(codeListData)
	form.complex1.fromJson(codeListData)
endif

*/

var response = apiobjects.serverForMovies.getAsync("record?id=" +tostring(this.form.id))

if response.isError() then
	system.consoleError(response.getErrorMessage())	
else
//	result = response.extractJson("card")
//	result = response.extractJson("record/")
	
	system.console(response.getJsonString())
	
	var codeListData = response.getJsonString()
	
	system.console("Tohle jsou má zdrojová data" +codeListData)
	
	//form.apiobjects.fillFromJson(codeListData)
	form.complex1.fromJson(codeListData)
	
	
	
	form.recordForEdit=response.getJsonString()
	
	//system.console("Tohle jsou má zdrojová data" +codeListData)
	
	//form.apiobjects.fillFromJson(codeListData)
	//form.complex1.fromJson(codeListData)
	//system.console(tostring(form.complex1.starring.Ac))
	//system.console(complex1.starring)
	
endif

form.actions.setUrl()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="deleteRecord" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[//form.complex1.id = params.data.id

form.deleteConfirm = apiobjects.page1.confirm("Do you really want to save all changes?")
if form.deleteConfirm = true then

	form.deleteComplex.id = form.id
	system.console("vypsani" +tostring(form.deleteComplex.toJson()))
	var response = apiobjects.serverForMovies.postAsync("delete", form.deleteComplex.toJson())


	if response.isError() then
		globals.errorMessage = response.getErrorMessage()
	else
		system.console("uspesne mazani")
	endif
	
	navigation.main.movies1.go("")
else 
//navigace na hlavní formulář
navigation.main.movies1.go("")
endif
]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="setUrl" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var url = packages.main.apiobjects.urlRouter1.findFormUrl(navigation.main.Moviedetail.fullName)

if form.id.hasValue() then
	url.addString("id", form.id)
endif

url.updatePageUrl()
]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="goToeditRecord" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[system.console("Tady odesílám data pro edit z movie detailu" +tostring(form.recordForEdit))
navigation.main.editRecord.go(form.recordForEdit)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
  </Actions>
</Form>