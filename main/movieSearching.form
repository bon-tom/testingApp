<?xml version="1.0" encoding="utf-8"?>
<?data-format version="0.400"?>
<Form>
  <Name value="movieSearching" />
  <Caption value="Movie searching" />
  <Content>
    <Panel>
      <Name value="panel1" />
      <Orientation value="Vertical" />
      <Panel.Height value="#" />
      <Panel.Width value="*" />
      <Children>
        <Button>
          <Name value="goBack" />
          <Caption value="Go back" />
          <Panel.Height value="#" />
          <Panel.Width value="150px" />
          <OnClick>
            <ActionEvent ReferencedAction="~goBackWithoutSearching" />
          </OnClick>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-button" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Button>
        <Panel>
          <Name value="panel5" />
          <Orientation value="Horizontal" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <Button>
              <Name value="sortByName" />
              <Caption value="Sort by name" />
              <Panel.Height value="#" />
              <Panel.Width value="150px" />
              <OnClick>
                <ActionEvent ReferencedAction="~sortName" />
              </OnClick>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-button" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Button>
            <Button>
              <Name value="sortByYear" />
              <Caption value="Sort by year" />
              <Panel.Height value="#" />
              <Panel.Width value="150px" />
              <OnClick>
                <ActionEvent ReferencedAction="~sortByYearOfRelease" />
              </OnClick>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-button" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Button>
            <Button>
              <Name value="sortByRating" />
              <Caption value="Sort by rating" />
              <Panel.Height value="#" />
              <Panel.Width value="150px" />
              <OnClick>
                <ActionEvent ReferencedAction="~sortRating" />
              </OnClick>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-button" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Button>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <Panel>
          <Name value="panel3" />
          <Orientation value="Vertical" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <Label>
              <Name value="SearchString" />
              <Data value="Search string" />
              <Panel.Height value="#" />
              <Panel.Width value="300px" />
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-label" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Label>
            <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
              <Name value="namewithPrompter" />
              <Caption value="Name with Prompter" />
              <DataApiObject reference="~movieName" />
              <DisplayMember value="name" />
              <Panel.Height value="#" />
              <Panel.Width value="300px" />
              <Tooltip value="Postupné zadávání názvu filmu" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="filter.list" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-referencelookup" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </ReferenceLookup>
            <TextBox>
              <Name value="textBox1" />
              <CaptionVAlign value="Middle" />
              <Panel.Height value="#" />
              <Panel.Width value="300px" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="name" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="name.isRequired()" />
                <Binding SourceProperty="Caption" Expression="name.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <Button>
              <Name value="searchbyNameONLY" />
              <Caption value="Search by name ONLY" />
              <Panel.Height value="#" />
              <Panel.Width value="150px" />
              <OnClick>
                <ActionEvent ReferencedAction="~searchwithName" />
              </OnClick>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-button" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Button>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <Panel>
          <Name value="panel2" />
          <Orientation value="Horizontal" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <EnumCombo>
              <Name value="enumCombo1" />
              <Panel.Height value="#" />
              <Panel.Width value="300px" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="filter.type" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="filter.type.isRequired()" />
                <Binding SourceProperty="Caption" Expression="filter.type.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-enumcombo" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </EnumCombo>
            <Button>
              <Name value="searchbyTypeONLY" />
              <Caption value="Search by type ONLY" />
              <Panel.Height value="#" />
              <Panel.Width value="150px" />
              <OnClick>
                <ActionEvent ReferencedAction="~searchbyType" />
              </OnClick>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-button" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Button>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <Panel>
          <Name value="panel4" />
          <Orientation value="Horizontal" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <TextBox>
              <Name value="starringString" />
              <CaptionVAlign value="Middle" />
              <Panel.Height value="#" />
              <Panel.Width value="300px" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="filter.starringString" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="filter.starringString.isRequired()" />
                <Binding SourceProperty="Caption" Expression="filter.starringString.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <Button>
              <Name value="searchbyStarring" />
              <Caption value="Search by starring ONLY" />
              <Panel.Height value="#" />
              <Panel.Width value="150px" />
              <OnClick>
                <ActionEvent ReferencedAction="~searchbyStarringName" />
              </OnClick>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-button" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Button>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <Button>
          <Name value="searchRecords" />
          <Caption value="Search records" />
          <Panel.Height value="#" />
          <Panel.Width value="150px" />
          <OnClick>
            <ActionEvent ReferencedAction="~searchwithName" />
          </OnClick>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-button" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Button>
        <Button>
          <Name value="RemoveAll" />
          <Caption value="Remove all" />
          <Panel.Height value="#" />
          <Panel.Width value="150px" />
          <OnClick>
            <ActionEvent ReferencedAction="~remove" />
          </OnClick>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-button" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Button>
        <DataTable>
          <Name value="dataTable2" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Bindings>
            <Binding SourceProperty="DataItems" Expression="collectionMovies" />
          </Bindings>
          <Columns>
            <DataColumn>
              <Name value="name" />
              <Caption value="Name" />
              <Content>
                <Label>
                  <Name value="label3" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="name" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
              </Content>
              <HeaderCssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-datacolumn" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </HeaderCssClass>
            </DataColumn>
            <DataColumn>
              <Name value="yearOfRelease" />
              <Caption value="Year of release" />
              <Content>
                <Label>
                  <Name value="label4" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="yearOfRelease" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
              </Content>
              <HeaderCssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-datacolumn" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </HeaderCssClass>
            </DataColumn>
            <DataColumn>
              <Name value="typeOfRecord" />
              <Caption value="Type of record" />
              <Content>
                <Label>
                  <Name value="type" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="type" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
              </Content>
              <HeaderCssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-datacolumn" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </HeaderCssClass>
            </DataColumn>
            <DataColumn>
              <Name value="dataColumn3" />
              <Caption value="Data column 3" />
              <Content>
                <Button>
                  <Name value="ShowWholeRecord" />
                  <Caption value="Show whole record" />
                  <Panel.Height value="#" />
                  <Panel.Width value="150px" />
                  <OnClick>
                    <ActionEvent ReferencedAction="~handler_ShowWholeRecord_OnClick" />
                  </OnClick>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-button" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Button>
              </Content>
              <HeaderCssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-datacolumn" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </HeaderCssClass>
            </DataColumn>
          </Columns>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-datatable" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </DataTable>
        <Label>
          <Name value="label6" />
          <Data value="All Records" />
          <Heading value="h3" />
          <Panel.Height value="#" />
          <Panel.HorizontalAlignment value="Center" />
          <Panel.Width value="300px" />
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-label" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Label>
        <DataTable>
          <Name value="dataTable1" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Bindings>
            <Binding SourceProperty="DataItems" Expression="collection1" />
          </Bindings>
          <Columns>
            <DataColumn>
              <Name value="nameofAll" />
              <Caption value="Name" />
              <Content>
                <Label>
                  <Name value="label1" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="name" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
              </Content>
              <HeaderCssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-datacolumn" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </HeaderCssClass>
            </DataColumn>
            <DataColumn>
              <Name value="year" />
              <Caption value="Year Of Release" />
              <Content>
                <Label>
                  <Name value="label2" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="yearOfRelease" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
              </Content>
              <HeaderCssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-datacolumn" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </HeaderCssClass>
            </DataColumn>
            <DataColumn>
              <Name value="dataColumn4" />
              <Caption value="rating" />
              <Content>
                <Label>
                  <Name value="label5" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="rating.score" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
              </Content>
              <HeaderCssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-datacolumn" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </HeaderCssClass>
            </DataColumn>
          </Columns>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-datatable" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </DataTable>
      </Children>
      <CssClass>
        <CssClassConditional>
          <ClassName value="{theme}-panel" />
          <IsThemedStyle value="True" />
        </CssClassConditional>
      </CssClass>
    </Panel>
  </Content>
  <DataContext>
    <DataContext>
      <Children>
        <Computed>
          <Name value="_MarkofEmptiness" />
          <Caption value="_MarkofEmptiness" />
          <Expression IsValid="True">
            <ExpressionText><![CDATA[not(form.dataJson.hasValue())]]></ExpressionText>
            <ResultType>
              <BaseType value="Bool" />
            </ResultType>
          </Expression>
        </Computed>
        <Attribute>
          <Name value="id" />
          <Caption value="Id" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="name" />
          <Caption value="Name" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="dataJson" />
          <Caption value="Data json" />
          <DataContextParameter.IsInput value="True" />
          <DataContextParameter.IsInputRequired value="True" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="ascDesc" />
          <Caption value="Asc desc" />
          <DeclaredType>
            <AttributeType>
              <BaseType value="Bool" />
            </AttributeType>
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="type" />
          <Caption value="Type" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Complex>
          <Name value="filter" />
          <Caption value="Filter" />
          <Children>
            <Reference>
              <Name value="list" />
              <Caption value="List" />
              <Children>
                <Attribute>
                  <Name value="name" />
                  <Caption value="Name" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="id" />
                  <Caption value="Id" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
              </Children>
            </Reference>
            <Attribute>
              <Name value="type" />
              <Caption value="Type" />
              <MetaType reference="+MetaTypes.metaType" />
            </Attribute>
            <Attribute>
              <Name value="starringString" />
              <Caption value="Starring string" />
              <DeclaredType>
                <AttributeType />
              </DeclaredType>
            </Attribute>
          </Children>
        </Complex>
        <Collection>
          <Name value="collection1" />
          <Caption value="Collection 1" />
          <Children>
            <Complex>
              <Name value="rating" />
              <Caption value="Rating" />
              <Children>
                <Include>
                  <Include reference="+DataEntities.RatingMovies" />
                </Include>
              </Children>
            </Complex>
            <Include>
              <Include reference="+DataEntities.Movies" />
            </Include>
            <Collection>
              <Name value="starring" />
              <Caption value="Starring" />
              <Children>
                <Include>
                  <Include reference="+DataEntities.Starring" />
                </Include>
              </Children>
            </Collection>
          </Children>
        </Collection>
        <Collection>
          <Name value="collectionMovies" />
          <Caption value="Collection movies" />
          <Children>
            <Include>
              <Include reference="+DataEntities.Movies" />
            </Include>
          </Children>
        </Collection>
      </Children>
    </DataContext>
  </DataContext>
  <OnActivate>
    <ActionEvent ReferencedAction="~initSearching" />
  </OnActivate>
  <Actions>
    <ActionBlock>
      <Name value="goBackWithoutSearching" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[navigation.main.movies1.go("")]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="searchbyNameORType" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[
system.console(form.dataJson)
system.console(tostring(form.dataJson.isTouched()) )
system.console("Seznam se jeví jako prázdny?" +tostring(form._MarkofEmptiness))

form.apiobjects.movieName.fillFromJson(form.dataJson)

//var source = tostring(form.dataJson)
//form.name = tostring(source)

if form.name.hasValue() then
	//form.collection1.clear()
	form.collection1.fromJson(form.dataJson)

	foreach item in form.collection1 do
		if indexOf(item.name, form.name) <> 0 then
			var collectionItem = form.collectionMovies.addItem()
			
			collectionItem.name = item.name
			collectionItem.yearOfRelease = item.yearOfRelease
			collectionItem.type = item.type
			collectionItem.mainDirector = item.mainDirector
			
			system.console("Cosik jsem aj našel podle částečného jména")
		endif
		system.console("blablabla")
	endfor
	
	var x = form.collectionMovies.toJson()
endif


if form.type.hasValue() then
	//form.collection1.clear()
	form.collection1.fromJson(form.dataJson)

	foreach item in form.collection1 do
		if indexOf(item.name, form.type) <> 0 then
			var collectionItem = form.collectionMovies.addItem()
			
			collectionItem.name = item.name
			collectionItem.yearOfRelease = item.yearOfRelease
			collectionItem.type = item.type
			collectionItem.mainDirector = item.mainDirector
			
			system.console("Cosik jsem aj našel podle type")
		endif
		system.console("blablabla")
	endfor
	
	var x = form.collectionMovies.toJson()
endif
//var movieListJson = apiobjects.serverForMovies.getAsync("list")

/*
system.console(tostring(form.name))
system.console(tostring(form.name.hasValue()))



if form.name.hasValue() then
	//form.collection1.clear()
	form.collection1.fromJson(movieListJson.getJsonString())
	foreach item in form.collection1 do
		if indexOf(item.name, form.name) <> 0 then
			var collectionItem = form.collectionMovies.addItem()
			
			collectionItem.name = item.name
			collectionItem.yearOfRelease = item.yearOfRelease
			collectionItem.type = item.type
			collectionItem.mainDirector = item.mainDirector
			
			system.console("Cosik jsem aj našel podle částečného jména")
		endif
		system.console("blablabla")
	endfor
	
	var x = form.collectionMovies.toJson()
endif
*/

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////


/*
system.console(tostring(form.type))
system.console(tostring(form.type.hasValue()))

system.console(tostring(form.name))
system.console(tostring(form.name.hasValue()))

//var movieListJson = apiobjects.serverForMovies.getAsync("list")

if form.type.hasValue() OR form.name.hasValue() then
	//form.collection1.clear()
	system.console("Jméno, nebo typ")
	form.collection1.fromJson(movieListJson.getJsonString())
	
	foreach item in form.collection1 do
	    system.console("Pom " + toString(indexOf(item.name, form.name) <> 0))
		if ( (indexOf(item.type, form.type) <> 0) OR (indexOf(item.name, form.name) <> 0) ) then
			var collectionItem = form.collectionMovies.addItem()
			
			collectionItem.name = item.name
			collectionItem.yearOfRelease = item.yearOfRelease
			collectionItem.type = item.type
						
			system.console("Cosik jsem aj našel podle druhu díla, nebo jména")
		endif
		system.console("blablabla")
	endfor
	
	var x = form.collectionMovies.toJson()
endif
*/

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////


//if form.type.hasValue() OR form.name.hasValue() then
/*
if form.name.hasValue() then
	//form.collection1.clear()
	system.console("Jméno, nebo typ")
	form.collection1.fromJson(movieListJson.getJsonString())
	
	foreach item in form.collection1 do
	    system.console("Pom " + toString(indexOf(item.name, form.name) <> 0))
		//if ( (indexOf(item.type, form.type) <> 0) OR (indexOf(item.name, form.name) <> 0) ) then
		if ( (indexOf(item.name, form.name) <> 0) ) then
			var collectionItem = form.collectionMovies.addItem()
			
			collectionItem.name = item.name
			collectionItem.yearOfRelease = item.yearOfRelease
			collectionItem.type = item.type
						
			system.console("Cosik jsem aj našel podle jména")
		endif
		system.console("blablabla")
	endfor
	
	var x = form.collectionMovies.toJson()
endif
*/]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="remove" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.clear()
system.console(tostring(not form.dataJson.isTouched()))]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="searchwithName" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[//system.console(form.dataJson)
form.collectionMovies.clear()
form.apiobjects.movieName.fillFromJson(form.dataJson)

//var source = tostring(form.dataJson)
//form.name = tostring(source)

if form.name.hasValue() then
	//form.collection1.clear()
	//form.collection1.fromJson(form.dataJson)

	foreach item in form.collection1 do
		if indexOf(item.name, form.name) <> 0 then
			var collectionItem = form.collectionMovies.addItem()
			
			collectionItem.id = item.id
			collectionItem.name = item.name
			collectionItem.yearOfRelease = item.yearOfRelease
			collectionItem.type = item.type
			collectionItem.mainDirector = item.mainDirector
			
			system.console("Cosik jsem aj našel podle částečného jména")
		endif
	endfor
	
	var x = form.collectionMovies.toJson()
endif

//if form.filter.type.hasValue() then





]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_ShowWholeRecord_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[navigation.main.movieDetail.go(params.data.id)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="searchbyStarringName" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.collectionMovies.clear()
if form.filter.starringString.hasValue() then
	//form.collection1.clear()
	//form.collection1.fromJson(form.dataJson)
	var domalejchzfiltru=tolower(form.filter.starringString)
	
	system.console(domalejchzfiltru)
	//system.console(form.collection1.starring.actorName)
	
	foreach item in form.collection1 do
	    system.console("Hledam podle jmena herce")
		//system.console(tostring(item.starring))
		
		//if indexOf(form.filter.starringString, collection1.starring.actorName) then
		//if indexOf(form.filter.starringString, collection1.starring.actorName) thenin
		if item.starring.exists(indexOf(tolower(current.actorName), domalejchzfiltru) <> 0) then
			var collectionItem = form.collectionMovies.addItem()
			
			collectionItem.id = item.id
			collectionItem.name = item.name
			collectionItem.yearOfRelease = item.yearOfRelease
			collectionItem.type = item.type
			collectionItem.mainDirector = item.mainDirector
			
			system.console("Cosik jsem aj našel podle jmena herce")
		endif
	endfor
	
	var x = form.collectionMovies.toJson()
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="searchbyType" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.collectionMovies.clear()
if form.filter.type.hasValue() then
	//form.collection1.fromJson(form.dataJson)

	foreach item in form.collection1 do
	
		//if indexOf(item.type, form.filter.type) <> 0 then
		//if indexOf(item.type, form.filter.type) then
		if (form.filter.type = item.type ) then
		//if indexOf(item.type, form.type) <> 0 then
			
			var collectionItem = form.collectionMovies.addItem()
			
			collectionItem.id = item.id
			
			collectionItem.name = item.name
			collectionItem.yearOfRelease = item.yearOfRelease
			collectionItem.type = item.type
			collectionItem.mainDirector = item.mainDirector
			
			system.console("Cosik jsem aj našel podle type")
		endif
	endfor
	
	var x = form.collectionMovies.toJson()
	
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="sortRating" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if form.ascDesc = true then
	form.ascDesc = false
else
	form.ascDesc = true
endif


//var resOfOrder = form.selectionofMovies.orderBy(current.yearOfRelease, true).toJson()
var resOfOrder = form.collection1.orderBy(current.rating.score, form.ascDesc).toJson()

//var resOfOrder = form.selectionofMovies.orderBy(current.rating.score, form.ascDesc).toJson()

system.console(resOfOrder)

form.collection1.fromJson(resOfOrder)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="initSearching" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.collection1.fromJson(form.dataJson)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="sortName" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if form.ascDesc = true then
	form.ascDesc = false
else
	form.ascDesc = true
endif


//var resOfOrder = form.selectionofMovies.orderBy(current.yearOfRelease, true).toJson()
var resOfOrder = form.collection1.orderBy(current.name, form.ascDesc).toJson()

//var resOfOrder = form.selectionofMovies.orderBy(current.rating.score, form.ascDesc).toJson()

system.console(resOfOrder)

form.collection1.fromJson(resOfOrder)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="sortByYearOfRelease" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if form.ascDesc = true then
	form.ascDesc = false
else
	form.ascDesc = true
endif


//var resOfOrder = form.selectionofMovies.orderBy(current.yearOfRelease, true).toJson()
var resOfOrder = form.collection1.orderBy(current.yearOfRelease, form.ascDesc).toJson()

//var resOfOrder = form.selectionofMovies.orderBy(current.rating.score, form.ascDesc).toJson()

system.console(resOfOrder)

form.collection1.fromJson(resOfOrder)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
  </Actions>
  <ApiObjects>
    <Codelist identity="Codelist.2fd2d7af4a6d445bad8a58610632f8e0">
      <Name value="movieName" />
      <autoLoad value="False" />
      <filterByDate value="False" />
      <name value="list" />
      <server reference="+GlobalApiObjects.serverForMovies" />
      <columns>
        <CodelistColumn identity="Codelist.2fd2d7af4a6d445bad8a58610632f8e0">
          <columnName value="id" />
          <columnRole value="Key" />
        </CodelistColumn>
        <CodelistColumn identity="Codelist.2fd2d7af4a6d445bad8a58610632f8e0">
          <columnName value="name" />
          <columnRole value="Description" />
        </CodelistColumn>
      </columns>
    </Codelist>
    <DeclListQuery identity="DeclListQuery.f41d2c211a8f43618588763e63b56065">
      <Name value="declListQuery1" />
      <listName value="list" />
      <server reference="+GlobalApiObjects.serverForMovies" />
    </DeclListQuery>
  </ApiObjects>
</Form>