<?xml version="1.0" encoding="utf-8"?>
<?data-format version="0.400"?>
<Form>
  <Name value="movieSearching" />
  <Caption value="Movie searching" />
  <Content>
    <Panel>
      <Name value="panel1" />
      <Orientation value="Vertical" />
      <Panel.Height value="#" />
      <Panel.Width value="*" />
      <Children>
        <Panel>
          <Name value="panel5" />
          <Orientation value="Horizontal" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <Panel>
          <Name value="panel3" />
          <Orientation value="Horizontal" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <ReferenceLookup identity="referenceLookup.10b2d4db46e641b5bba23b33e3568c2e">
              <Name value="namewithPrompter" />
              <Caption value="Name with Prompter" />
              <DataApiObject reference="~movieName" />
              <DisplayMember value="name" />
              <Panel.Height value="#" />
              <Panel.Width value="300px" />
              <Tooltip value="Postupné zadávání názvu filmu" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="filter.list" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-referencelookup" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </ReferenceLookup>
            <Button>
              <Name value="searchbyNameONLY" />
              <Caption value="Search by name ONLY" />
              <Panel.Height value="#" />
              <Panel.Width value="150px" />
              <OnClick>
                <ActionEvent ReferencedAction="~searchwithName" />
              </OnClick>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-button" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Button>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <Panel>
          <Name value="panel2" />
          <Orientation value="Horizontal" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <EnumCombo>
              <Name value="enumCombo1" />
              <Panel.Height value="#" />
              <Panel.Width value="300px" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="filter.type" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="filter.type.isRequired()" />
                <Binding SourceProperty="Caption" Expression="filter.type.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-enumcombo" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </EnumCombo>
            <Button>
              <Name value="searchbyTypeONLY" />
              <Caption value="Search by type ONLY" />
              <Panel.Height value="#" />
              <Panel.Width value="150px" />
              <OnClick>
                <ActionEvent ReferencedAction="~searchbyType" />
              </OnClick>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-button" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Button>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <Panel>
          <Name value="panel4" />
          <Orientation value="Horizontal" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <TextBox>
              <Name value="starringString" />
              <CaptionVAlign value="Middle" />
              <Panel.Height value="#" />
              <Panel.Width value="300px" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="filter.starringString" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="filter.starringString.isRequired()" />
                <Binding SourceProperty="Caption" Expression="filter.starringString.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <Button>
              <Name value="searchbyStarring" />
              <Caption value="Search by starring ONLY" />
              <Panel.Height value="#" />
              <Panel.Width value="150px" />
              <OnClick>
                <ActionEvent ReferencedAction="~searchbyStarringName" />
              </OnClick>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-button" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Button>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <Button>
          <Name value="searchRecords" />
          <Caption value="Search records" />
          <Panel.Height value="#" />
          <Panel.Width value="150px" />
          <OnClick>
            <ActionEvent ReferencedAction="~searchwithName" />
          </OnClick>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-button" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Button>
        <GroupBox>
          <Name value="groupBox1" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Content>
            <Repeater>
              <Name value="repeater1" />
              <Content>
                <Panel>
                  <Name value="panel10" />
                  <Orientation value="Horizontal" />
                  <Children>
                    <Panel>
                      <Name value="panel9" />
                      <Orientation value="Horizontal" />
                      <Panel.Height value="#" />
                      <Panel.Width value="*" />
                      <Children>
                        <Panel>
                          <Name value="panel81" />
                          <Orientation value="Horizontal" />
                          <Panel.Height value="#" />
                          <Panel.Width value="*" />
                          <Children>
                            <Panel>
                              <Name value="panel611" />
                              <Orientation value="Horizontal" />
                              <Panel.Height value="#" />
                              <Panel.Width value="*" />
                              <Children>
                                <Button>
                                  <Name value="ShowWholeRecordd" />
                                  <Caption value="Show whole recordd" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="150px" />
                                  <OnClick>
                                    <ActionEvent ReferencedAction="~handler_button1_OnClick" />
                                  </OnClick>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-button" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </Button>
                                <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
                                  <Name value="nameOfMovie" />
                                  <Caption value="Name of movie" />
                                  <CaptionPosition value="Top" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="150px" />
                                  <Bindings>
                                    <Binding SourceProperty="Data" Expression="name" />
                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="name.isRequired()" />
                                    <Binding SourceProperty="Caption" Expression="name.caption()" />
                                  </Bindings>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-labeledtext" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </LabeledText>
                                <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
                                  <Name value="yearOfRele" />
                                  <Caption value="Year of rele" />
                                  <CaptionPosition value="Top" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="150px" />
                                  <Bindings>
                                    <Binding SourceProperty="Data" Expression="yearOfRelease" />
                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="yearOfRelease.isRequired()" />
                                    <Binding SourceProperty="Caption" Expression="yearOfRelease.caption()" />
                                  </Bindings>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-labeledtext" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </LabeledText>
                                <EnumCombo>
                                  <Name value="enumCombo211" />
                                  <Caption value="Enum combo 2" />
                                  <IsEnabled value="False" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Bindings>
                                    <Binding SourceProperty="Data" Expression="type" />
                                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="type.isRequired()" />
                                    <Binding SourceProperty="Caption" Expression="type.caption()" />
                                  </Bindings>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-enumcombo" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </EnumCombo>
                                <GroupBox>
                                  <Name value="groupBox211" />
                                  <Caption value="Group box 2" />
                                  <Panel.Height value="#" />
                                  <Panel.Width value="*" />
                                  <Content>
                                    <Repeater>
                                      <Name value="repeater211" />
                                      <Content>
                                        <Panel>
                                          <Name value="panel711" />
                                          <Orientation value="Vertical" />
                                          <Children>
                                            <TextBox>
                                              <Name value="textBox711" />
                                              <Caption value="Text box 7" />
                                              <IsEnabled value="False" />
                                              <Panel.Height value="#" />
                                              <Panel.Width value="*" />
                                              <Bindings>
                                                <Binding SourceProperty="Data" Expression="actorName" />
                                                <Binding SourceProperty="IsRequiredMarkVisible" Expression="actorName.isRequired()" />
                                                <Binding SourceProperty="Caption" Expression="actorName.caption()" />
                                              </Bindings>
                                              <CssClass>
                                                <CssClassConditional>
                                                  <ClassName value="{theme}-textbox" />
                                                  <IsThemedStyle value="True" />
                                                </CssClassConditional>
                                              </CssClass>
                                            </TextBox>
                                          </Children>
                                          <CssClass>
                                            <CssClassConditional>
                                              <ClassName value="{theme}-panel" />
                                              <IsThemedStyle value="True" />
                                            </CssClassConditional>
                                          </CssClass>
                                        </Panel>
                                      </Content>
                                      <Bindings>
                                        <Binding SourceProperty="DataItems" Expression="starring" />
                                      </Bindings>
                                      <CssClass>
                                        <CssClassConditional>
                                          <ClassName value="{theme}-repeater" />
                                          <IsThemedStyle value="True" />
                                        </CssClassConditional>
                                      </CssClass>
                                    </Repeater>
                                  </Content>
                                  <Bindings>
                                    <Binding SourceProperty="Caption" Expression="starring.caption()" />
                                  </Bindings>
                                  <CssClass>
                                    <CssClassConditional>
                                      <ClassName value="{theme}-groupbox" />
                                      <IsThemedStyle value="True" />
                                    </CssClassConditional>
                                  </CssClass>
                                </GroupBox>
                              </Children>
                              <CssClass>
                                <CssClassConditional>
                                  <ClassName value="{theme}-panel" />
                                  <IsThemedStyle value="True" />
                                </CssClassConditional>
                              </CssClass>
                            </Panel>
                          </Children>
                          <CssClass>
                            <CssClassConditional>
                              <ClassName value="{theme}-panel" />
                              <IsThemedStyle value="True" />
                            </CssClassConditional>
                          </CssClass>
                        </Panel>
                      </Children>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-panel" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </Panel>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
              </Content>
              <Bindings>
                <Binding SourceProperty="DataItems" Expression="collectionMovies" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-repeater" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Repeater>
          </Content>
          <Bindings>
            <Binding SourceProperty="Caption" Expression="collectionMovies.caption()" />
          </Bindings>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-groupbox" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </GroupBox>
      </Children>
      <CssClass>
        <CssClassConditional>
          <ClassName value="{theme}-panel" />
          <IsThemedStyle value="True" />
        </CssClassConditional>
      </CssClass>
    </Panel>
  </Content>
  <DataContext>
    <DataContext>
      <Children>
        <Computed>
          <Name value="_MarkofEmptiness" />
          <Caption value="_MarkofEmptiness" />
          <Expression IsValid="True">
            <ExpressionText><![CDATA[not(form.dataJson.hasValue())]]></ExpressionText>
            <ResultType>
              <BaseType value="Bool" />
            </ResultType>
          </Expression>
        </Computed>
        <Attribute>
          <Name value="id" />
          <Caption value="Id" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="name" />
          <Caption value="Name" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="dataJson" />
          <Caption value="Data json" />
          <DataContextParameter.IsInput value="True" />
          <DataContextParameter.IsInputRequired value="True" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="ascDesc" />
          <Caption value="Asc desc" />
          <DeclaredType>
            <AttributeType>
              <BaseType value="Bool" />
            </AttributeType>
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="type" />
          <Caption value="Type" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="mainDirector" />
          <Caption value="Main director" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Complex>
          <Name value="filter" />
          <Caption value="Filter" />
          <Children>
            <Reference>
              <Name value="list" />
              <Caption value="List" />
              <Children>
                <Attribute>
                  <Name value="name" />
                  <Caption value="Name" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="id" />
                  <Caption value="Id" />
                  <DeclaredType>
                    <AttributeType />
                  </DeclaredType>
                </Attribute>
              </Children>
            </Reference>
            <Attribute>
              <Name value="type" />
              <Caption value="Type" />
              <MetaType reference="+MetaTypes.metaType" />
            </Attribute>
            <Attribute>
              <Name value="starringString" />
              <Caption value="Starring string" />
              <DeclaredType>
                <AttributeType />
              </DeclaredType>
            </Attribute>
          </Children>
        </Complex>
        <Collection>
          <Name value="collection1" />
          <Caption value="Collection 1" />
          <Children>
            <Complex>
              <Name value="rating" />
              <Caption value="Rating" />
              <Children>
                <Include>
                  <Include reference="+DataEntities.RatingMovies" />
                </Include>
              </Children>
            </Complex>
            <Include>
              <Include reference="+DataEntities.Movies" />
            </Include>
            <Collection>
              <Name value="starring" />
              <Caption value="Starring" />
              <Children>
                <Include>
                  <Include reference="+DataEntities.starring" />
                </Include>
              </Children>
            </Collection>
          </Children>
        </Collection>
        <Collection>
          <Name value="collectionMovies" />
          <Caption value="Collection movies" />
          <Children>
            <Include>
              <Include reference="+DataEntities.Movies" />
            </Include>
            <Collection>
              <Name value="starring" />
              <Caption value="Starring" />
              <Children>
                <Include>
                  <Include reference="+DataEntities.starring" />
                </Include>
              </Children>
            </Collection>
          </Children>
        </Collection>
      </Children>
    </DataContext>
  </DataContext>
  <OnActivate>
    <ActionEvent ReferencedAction="~initSearching" />
  </OnActivate>
  <Actions>
    <ActionBlock>
      <Name value="searchwithName" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[//system.console(form.dataJson)
form.collectionMovies.clear()
//form.apiobjects.movieName.fillFromJson(form.dataJson)

//var source = tostring(form.dataJson)
//form.name = tostring(source)

if form.name.hasValue() then
	//form.collection1.clear()
	//form.collection1.fromJson(form.dataJson)

	foreach item in form.collection1 do
		if indexOf(item.name, form.name) <> 0 then
		//	system.console(form.collectionMovies.)
			var collectionItem = form.collectionMovies.addItem()
			
			system.console("repoName"+item.toJson())
			//form.collectionMovies.addItem()
			
			
			collectionItem.id = item.id
			collectionItem.name = item.name
			collectionItem.yearOfRelease = item.yearOfRelease
			collectionItem.type = item.type
			//collectionItem.mainDirector = item.mainDirector
			
			//collectionItem.starring = item.starring
		    var ItemJson = item.starring.toJson()
			collectionItem.starring.fromJson(ItemJson)
			
			
			system.console("Cosik jsem aj našel podle částečného jména")
		endif
	endfor
	
	//var x = form.collectionMovies.toJson()
endif

//if form.filter.type.hasValue() then





]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="searchbyStarringName" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.collectionMovies.clear()
if form.filter.starringString.hasValue() then
	//form.collection1.clear()
	//form.collection1.fromJson(form.dataJson)
	var domalejchzfiltru=tolower(form.filter.starringString)
	
	system.console(domalejchzfiltru)
	//system.console(form.collection1.starring.actorName)
	
	foreach item in form.collection1 do
	    system.console("Hledam podle jmena herce")
		//system.console(tostring(item.starring))
		
		//if indexOf(form.filter.starringString, collection1.starring.actorName) then
		//if indexOf(form.filter.starringString, collection1.starring.actorName) thenin
		if item.starring.exists(indexOf(tolower(current.actorName), domalejchzfiltru) <> 0) then
			var collectionItem = form.collectionMovies.addItem()
			
			//collectionItem.id = item.id
			system.console("repoStarringName"+item.toJson())
			//form.collectionMovies = item
			
			//form.collectionMovies = x
			
			collectionItem.id = item.id
			
			collectionItem.name = item.name
			collectionItem.yearOfRelease = item.yearOfRelease
			collectionItem.type = item.type
			
  
		    
		    //collectionItem.starring = item.starring
		    
		    var ItemJson = item.starring.toJson()
			collectionItem.starring.fromJson(ItemJson)

		    
			system.console("Cosik jsem aj našel podle jmena herce")
			//var y = collectionItem.toJson()
			//system.console(y)
		endif
	endfor
	
	//var x = form.collectionMovies.toJson()
	//system.console("blbblbec"+ x)
	
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="searchbyType" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.collectionMovies.clear()
if form.filter.type.hasValue() then
	//form.collection1.fromJson(form.dataJson)

	foreach item in form.collection1 do
	
		//if indexOf(item.type, form.filter.type) <> 0 then
		//if indexOf(item.type, form.filter.type) then
		if (form.filter.type = item.type ) then
		//if indexOf(item.type, form.type) <> 0 then
			
			var collectionItem = form.collectionMovies.addItem()
			
			system.console("repoType"+item.toJson())
			
			collectionItem.id = item.id
			collectionItem.name = item.name
			collectionItem.yearOfRelease = item.yearOfRelease
			collectionItem.type = item.type
			
			//collectionItem.starring = item.starring
			
			var ItemJson = item.starring.toJson()
			collectionItem.starring.fromJson(ItemJson)
			
			system.console("Cosik jsem aj našel podle type")
		endif
	endfor
	
	//var x = form.collectionMovies.toJson()
	
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="initSearching" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if apiobjects.breadcrumbsCtrl1.count() = 2 then
	apiobjects.breadcrumbsCtrl1.removeTo(1)
	apiobjects.breadcrumbsCtrl1.addBreadcrumb("search", "Movie Search", "", "", true)
	else
	apiobjects.breadcrumbsCtrl1.removeTo(2)	
endif
if apiobjects.breadcrumbsCtrl1.count() = 1 then
		apiobjects.breadcrumbsCtrl1.addBreadcrumb("search", "Movie Search", "", "", true)
	endif

form.collection1.fromJson(form.dataJson)
form.apiobjects.movieName.fillFromJson(form.dataJson)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_button1_OnClick" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[navigation.main.movieDetail.goAndBack(params.data.id)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_eventDispatcher1_OnMessage" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[if params.type = "breadcrumbsClick" then
	if params.data = "main" then		
		navigation.main.moviesList.go()
	endif
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
  </Actions>
  <ApiObjects>
    <Codelist identity="Codelist.2fd2d7af4a6d445bad8a58610632f8e0">
      <Name value="movieName" />
      <autoLoad value="False" />
      <filterByDate value="False" />
      <name value="list" />
      <server reference="+GlobalApiObjects.serverForMovies" />
      <columns>
        <CodelistColumn identity="Codelist.2fd2d7af4a6d445bad8a58610632f8e0">
          <columnName value="id" />
          <columnRole value="Key" />
        </CodelistColumn>
        <CodelistColumn identity="Codelist.2fd2d7af4a6d445bad8a58610632f8e0">
          <columnName value="name" />
          <columnRole value="Description" />
        </CodelistColumn>
      </columns>
    </Codelist>
    <DeclListQuery identity="DeclListQuery.f41d2c211a8f43618588763e63b56065">
      <Name value="declListQuery1" />
      <listName value="list" />
      <server reference="+GlobalApiObjects.serverForMovies" />
    </DeclListQuery>
    <EventDispatcher identity="EventDispatcher.eb764ceb30274f1e9a3d051d512d6b26">
      <Name value="eventDispatcher1" />
      <OnMessage>
        <ActionEvent ReferencedAction="~handler_eventDispatcher1_OnMessage" />
      </OnMessage>
    </EventDispatcher>
  </ApiObjects>
</Form>