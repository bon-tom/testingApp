<?xml version="1.0" encoding="utf-8"?>
<?data-format version="0.400"?>
<Form>
  <Name value="movieEdit" />
  <Caption value="Movie edit" />
  <Content>
    <Panel>
      <Name value="panel1" />
      <Orientation value="Vertical" />
      <Panel.Height value="#" />
      <Panel.Width value="*" />
      <Children>
        <Button>
          <Name value="GobackWithoutSaving" />
          <Caption value="Go back Without Saving" />
          <Panel.Height value="#" />
          <Panel.Width value="150px" />
          <OnClick>
            <ActionEvent ReferencedAction="~goToMovies" />
          </OnClick>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-button" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Button>
        <Button>
          <Name value="SaveEditedRecord" />
          <Caption value="Save Edited Record" />
          <Panel.Height value="#" />
          <Panel.Width value="150px" />
          <OnClick>
            <ActionEvent ReferencedAction="~goToMovies" />
          </OnClick>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-button" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Button>
        <Panel>
          <Name value="panel2" />
          <Orientation value="Vertical" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <TextBox>
              <Name value="textBox1" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.id" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.id.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.id.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <TextBox>
              <Name value="textBox2" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.name" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.name.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.name.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <TextBox>
              <Name value="textBox3" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.yearOfRelease" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.yearOfRelease.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.yearOfRelease.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <TextBox>
              <Name value="textBox4" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.type" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.type.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.type.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <TextBox>
              <Name value="textBox5" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.mainDirector" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.mainDirector.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.mainDirector.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <TextBox>
              <Name value="textBox6" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.description" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.description.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.description.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <Panel>
              <Name value="panel3" />
              <Orientation value="Vertical" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <DatePicker>
                  <Name value="datePicker1" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="complex1.rating.dateOfWatching" />
                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.rating.dateOfWatching.isRequired()" />
                    <Binding SourceProperty="Caption" Expression="complex1.rating.dateOfWatching.caption()" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-datepicker" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </DatePicker>
                <CheckBox>
                  <Name value="checkBox1" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="complex1.rating.seenItWhole" />
                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.rating.seenItWhole.isRequired()" />
                    <Binding SourceProperty="Caption" Expression="complex1.rating.seenItWhole.caption()" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-checkbox" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </CheckBox>
                <TextBox>
                  <Name value="textBox7" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="complex1.rating.score" />
                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.rating.score.isRequired()" />
                    <Binding SourceProperty="Caption" Expression="complex1.rating.score.caption()" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-textbox" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </TextBox>
                <Label>
                  <Name value="label1" />
                  <Data value="Zatím nemazat" />
                  <Panel.Height value="#" />
                  <Panel.Width value="300px" />
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-label" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Label>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Panel>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
      </Children>
      <CssClass>
        <CssClassConditional>
          <ClassName value="{theme}-panel" />
          <IsThemedStyle value="True" />
        </CssClassConditional>
      </CssClass>
    </Panel>
  </Content>
  <DataContext>
    <DataContext>
      <Children>
        <Attribute>
          <Name value="id" />
          <Caption value="Id" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Complex>
          <Name value="complex1" />
          <Caption value="Complex 1" />
          <Children>
            <Include>
              <Include reference="+DataEntities.Movies" />
            </Include>
            <Complex>
              <Name value="rating" />
              <Caption value="Rating" />
              <Children>
                <Attribute>
                  <Name value="dateOfWatching" />
                  <Caption value="Date of watching" />
                  <DeclaredType>
                    <AttributeType>
                      <BaseType value="DateTime" />
                    </AttributeType>
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="seenItWhole" />
                  <Caption value="Seen it whole" />
                  <DeclaredType>
                    <AttributeType>
                      <BaseType value="Bool" />
                    </AttributeType>
                  </DeclaredType>
                </Attribute>
                <Attribute>
                  <Name value="score" />
                  <Caption value="Score" />
                  <DeclaredType>
                    <AttributeType>
                      <BaseType value="Integer" />
                      <IntMax value="10" />
                      <IntMin value="0" />
                    </AttributeType>
                  </DeclaredType>
                </Attribute>
              </Children>
            </Complex>
          </Children>
        </Complex>
      </Children>
    </DataContext>
  </DataContext>
  <Actions>
    <ActionBlock>
      <Name value="goToMovies" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[navigation.main.movies1.go("")]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="action1" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var response = apiobjects.serverForMovies.getAsync("record?id=" +tostring(this.form.id))

if response.isError() then
	system.consoleError(response.getErrorMessage())	
else
//	result = response.extractJson("card")
//	result = response.extractJson("record/")
	
	system.console(response.getJsonString())
	
	var codeListData = response.getJsonString()
	
	system.console(codeListData)
	
	//form.apiobjects.fillFromJson(codeListData)
	form.complex1.fromJson(codeListData)
endif
]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
  </Actions>
</Form>